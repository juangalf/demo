<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="ADX365.Forms.Core.Views.InventoryMasterView"
    x:Name="InventoryMasterView"
    xmlns:viewModelBase="clr-namespace:ADX365.Forms.Core.ViewModels"
    viewModelBase:ViewModelLocator.AutoWireViewModel="true"
    Title="{Binding Text_Title}"
    xmlns:ctrls="clr-namespace:ADX365.Forms.Core.Effects.Renderers" 
    xmlns:Common="clr-namespace:ADX365.Forms.Config"     
>
    <ContentPage.ToolbarItems>
        <ToolbarItem 
            Order="Default"  
            Text="Filters" 
        />
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="InventoryMasterViewStyle" TargetType="ListView">
                <Setter Property="RowHeight" Value="320"/>
                <Setter Property="SeparatorVisibility" Value="None"/>
            </Style>
            <Style x:Key="InventoryMasterGridContainerStyle" BasedOn="{StaticResource MasterlistGridContainerStyle}" TargetType="Grid">
                <Setter Property="BackgroundColor" Value="White"/>
                <Setter Property="Margin" Value="10,5,10,5"/>
                <Setter Property="Padding" Value="0"/>
            </Style>
            <Style x:Key="InventoryMasterElementTextContainerStyle" TargetType="StackLayout">
                <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
                <Setter Property="Margin" Value="10,0,10,0"/>
                <Setter Property="Padding" Value="0"/>
            </Style>
            <Style x:Key="InventoryMasterElementButtonContainerStyle" TargetType="StackLayout">
                <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
                <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
                <Setter Property="Padding" Value="0,0,10,0"/>
            </Style>
            <Style x:Key="InventoryMasterlistMainTextStyle" BasedOn="{StaticResource MasterlistMainTextStyle}" TargetType="Label">
                <Setter Property="FontSize">
                    <OnPlatform x:TypeArguments="x:Double">
                        <OnPlatform.Android>12</OnPlatform.Android>
                        <OnPlatform.iOS>12</OnPlatform.iOS>
                    </OnPlatform>
                </Setter>
                <Setter Property="HeightRequest" Value="13"/>
            </Style>
            <Style x:Key="InventoryMasterButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="End"/>
                <Setter Property="WidthRequest" Value="150"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="FontSize" Value="18"/>
            </Style>
            <Style x:Key="InventoryMasterOptionButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                <Setter Property="WidthRequest" Value="250"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Header -->
            <StackLayout Grid.Row="0">
                <ctrls:FormPicker Style="{StaticResource PickerField}"
                    ItemsSource="{Binding CategoriesList}"                            
                    ItemDisplayBinding="{Binding Description}" 
                    SelectedItem="{Binding SelectedCategory}"
                    Margin="5,5,5,2"
                />
            </StackLayout>
            <!-- List -->
            <Label Grid.Row="1" IsVisible="{Binding IsResultEmpty}" Text="{Binding Text_EmptyResults}"/>
            <ListView                 
                Grid.Row="1" 
                ItemsSource="{Binding InventoryList}"
                IsPullToRefreshEnabled="true"
                RefreshCommand="{Binding RefreshCommand}"
                IsRefreshing="{Binding IsRefreshingList, Mode=OneWay}"
                Style="{StaticResource InventoryMasterViewStyle}"
                SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                IsVisible="{Binding IsResultEmpty, Converter={StaticResource NotConverter}}"
                BackgroundColor="{StaticResource LightGrayColor}"
            >
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <ViewCell.View>
                                <Grid Style="{StaticResource InventoryMasterGridContainerStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="240"/>
                                        <RowDefinition Height="60"/>
                                    </Grid.RowDefinitions>
                                    <!-- Image -->
                                    <Image Grid.Row="0" Grid.ColumnSpan="2" Source="{Binding mainPhoto}" Aspect="AspectFill"/>
                                    <!-- Text -->
                                    <StackLayout Grid.Row="1" Grid.Column="0" Style="{StaticResource InventoryMasterElementTextContainerStyle}">
                                        <Label Text="{Binding FullVehicleName}" Style="{StaticResource InventoryMasterlistMainTextStyle}" FontAttributes="Bold"/>
                                        <Label Text="{Binding AdxGradeRendered, StringFormat='ADX 365 Grade: {0}'}" Style="{StaticResource InventoryMasterlistMainTextStyle}"/>
                                        <Label Text="{Binding vin, StringFormat='VIN: {0}'}" Style="{StaticResource InventoryMasterlistMainTextStyle}"/>
                                    </StackLayout>
                                    <!-- Buttons -->
                                    <StackLayout Grid.Row="1" Grid.Column="1" Style="{StaticResource InventoryMasterElementButtonContainerStyle}">
                                        <Frame Style="{StaticResource ButtonComplexContainerStyle}">
                                            <Frame.GestureRecognizers>
                                                <TapGestureRecognizer 
                                                    Command="{Binding Path=BindingContext.ToggleOptionsCommand, Source={x:Reference InventoryMasterView}}"
                                                    CommandParameter="{Binding .}"
                                                />
                                            </Frame.GestureRecognizers>
                                            <StackLayout Orientation="Horizontal" Spacing="10">
                                                <Label Text="{x:Static Common:FontAwesome.FACog}" Style="{StaticResource ButtonComplexIconStyle}"/>
                                                <Label Text="{Binding Path=BindingContext.Text_Options, Source={x:Reference InventoryMasterView}}" Style="{StaticResource ButtonComplexTextStyle}"/>
                                            </StackLayout>
                                        </Frame>
                                    </StackLayout>
                                    <Grid Grid.Row="0" Grid.ColumnSpan="2" IsVisible="{Binding ShowOptions}" HorizontalOptions="End" VerticalOptions="End" TranslationY="5" Margin="0,0,10,0">
                                        <Frame BackgroundColor="White" Opacity="0.5" HasShadow="false" OutlineColor="Black"/>
                                        <StackLayout Padding="10">
                                            <Button IsVisible="{Binding IsViewEnabled}"
                                                    Text="{Binding Path=BindingContext.Text_ViewButton, Source={x:Reference InventoryMasterView}}" 
                                                    Command="{Binding Path=BindingContext.ViewVehicleCommand, Source={x:Reference InventoryMasterView}}"
                                                    CommandParameter="{Binding .}"
                                                    Style="{StaticResource InventoryMasterOptionButtonStyle}"/>
                                            <Button IsVisible="{Binding IsUpdateEnabled}"
                                                    Text="{Binding Path=BindingContext.Text_UpdateButton, Source={x:Reference InventoryMasterView}}" 
                                                    Command="{Binding Path=BindingContext.UpdateVehicleCommand, Source={x:Reference InventoryMasterView}}"
                                                    CommandParameter="{Binding .}"
                                                    Style="{StaticResource InventoryMasterOptionButtonStyle}"/>
                                            <Button IsVisible="{Binding IsDeactivateFromAuctionEnabled}"
                                                    Text="{Binding Path=BindingContext.Text_DeactivateFromAuctionButton, Source={x:Reference InventoryMasterView}}" 
                                                    Command="{Binding Path=BindingContext.DeactivateFromAuctionCommand, Source={x:Reference InventoryMasterView}}"
                                                    CommandParameter="{Binding .}"
                                                    Style="{StaticResource InventoryMasterOptionButtonStyle}" BackgroundColor="{StaticResource ActionCancelButtonColor}"/>
                                            <Button IsVisible="{Binding IsRemoveEnabled}"
                                                    Text="{Binding Path=BindingContext.Text_DeactivateFromInventoryButton, Source={x:Reference InventoryMasterView}}" 
                                                    Command="{Binding Path=BindingContext.DeactivateFromInventoryCommand, Source={x:Reference InventoryMasterView}}"
                                                    CommandParameter="{Binding .}"
                                                    Style="{StaticResource InventoryMasterOptionButtonStyle}" BackgroundColor="{StaticResource ActionCancelButtonColor}"/>
                                            <Button IsVisible="{Binding IsReactivateEnabled}"
                                                    Text="{Binding Path=BindingContext.Text_ReactivateButton, Source={x:Reference InventoryMasterView}}" 
                                                    Command="{Binding Path=BindingContext.ReactivateCommand, Source={x:Reference InventoryMasterView}}"
                                                    CommandParameter="{Binding .}"
                                                    Style="{StaticResource InventoryMasterOptionButtonStyle}"/>
                                        </StackLayout>
                                    </Grid>
                                </Grid>
                            </ViewCell.View>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </ContentPage.Content>
</ContentPage>